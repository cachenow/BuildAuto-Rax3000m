name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL:  https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        variant: [nand, emmc]

    steps:
    - name: Check Server Performance
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号(降序): 7763，8370C，8272CL，8171M，E5-2673\n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo "CPU核心数量: $(nproc)"
        echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息:"
        echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout
      uses: actions/checkout@main

    - name: Clone source code
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF $OPENWRT_PATH/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd $OPENWRT_PATH && ./scripts/feeds update -a

    - name: Install feeds
      run: cd $OPENWRT_PATH && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        chmod +x $DIY_P2_SH
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_P2_SH
        # Select matrix config
        if [ "${{ matrix.variant }}" = "nand" ]; then
          SRC="$GITHUB_WORKSPACE/.config-nand"
        else
          SRC="$GITHUB_WORKSPACE/.config-emmc"
        fi
        if [ -f "$SRC" ]; then
          cp -f "$SRC" .config
        elif [ -f "$GITHUB_WORKSPACE/.config" ]; then
          cp -f "$GITHUB_WORKSPACE/.config" .config
        fi

    - name: Download package
      id: package
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) thread compile"
        make defconfig
        make -j$(nproc) || make -j1 || make -j1 V=s

        # Rename sysupgrade filename by variant
        FW_DIR=$(ls -d bin/targets/*/*)
        cd "$FW_DIR"
        SYS=$(ls *cmcc_rax3000m-squashfs-sysupgrade.itb 2>/dev/null | head -n1)
        if [ -n "$SYS" ]; then
          if [ "${{ matrix.variant }}" = "nand" ]; then
            mv -f "$SYS" "immortalwrt-mediatek-filogic-cmcc_rax3000m-nand-squashfs-sysupgrade.itb"
          else
            mv -f "$SYS" "immortalwrt-mediatek-filogic-cmcc_rax3000m-emmc-squashfs-sysupgrade.itb"
          fi
        fi
        cd "$OPENWRT_PATH"

        echo "status=success" >> $GITHUB_ENV
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}-${{ matrix.variant }}
        path: ${{ env.OPENWRT_PATH }}/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_ENV


    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: firmware-${{ matrix.variant }}
        path: ${{ env.FIRMWARE }}

  publish:
    runs-on: ubuntu-22.04
    needs: build
    if: always() && (needs.build.result == 'success' || contains(needs.build.outputs.*, 'success'))

    steps:
    - name: Download eMMC firmware
      uses: actions/download-artifact@v3
      with:
        name: firmware-emmc
        path: firmware_emmc
      continue-on-error: true

    - name: Download NAND firmware
      uses: actions/download-artifact@v3
      with:
        name: firmware-nand
        path: firmware_nand
      continue-on-error: true

    - name: Merge and prune
      run: |
        # Handle NAND firmware if exists
        if [ -d firmware_nand ]; then
          cd firmware_nand
          find . -type f ! -name "*-nand-squashfs-sysupgrade.itb" -delete
          find . -type d -empty -delete
          cd ..
          if ls firmware_nand/*.itb 1> /dev/null 2>&1; then
            cp -f firmware_nand/*.itb firmware_emmc/
          fi
        fi
        
        # Set firmware directory (prefer emmc, fallback to nand if emmc missing)
        if [ -d firmware_emmc ]; then
          echo "FIRMWARE_DIR=$PWD/firmware_emmc" >> $GITHUB_ENV
        elif [ -d firmware_nand ]; then
          echo "FIRMWARE_DIR=$PWD/firmware_nand" >> $GITHUB_ENV
        else
          echo "ERROR: No firmware directory found"
          exit 1
        fi

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE_DIR }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 7
        keep_minimum_runs: 0

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 5
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Notification
#      if: cancelled() == false
#      uses: cachenow/action-telegram@v1.1
#      with:
#        botToken: ${{ secrets.BotToken }}
#        chatId: ${{ secrets.ChatID }}
#        jobStatus: ${{ job.status }}
#        skipSuccess: false
